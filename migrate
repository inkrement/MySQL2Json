#!/usr/bin/env python

import click
from mysql2bq.mysql2bqSchema import BuildSchema
from mysql2bq.mysql2json import JsonExport
from mysql2bq.mysql2csv import CSVExport

@click.command()
@click.option('-h', '--host', default='127.0.0.1', help='MySQL hostname')
@click.option('-d', '--database', required=True, help='MySQL database')
@click.option('-u', '--user', default='root', help='MySQL user')
@click.option('-p', '--password', default='', help='MySQL password')
@click.option('-t', '--table', required=True, help='MySQL table')
@click.option('--tmpdir', default='/tmp', help='workingdirectory')
@click.option('-f', '--oformat', default='csv', help='Foramt (csv or json)')
@click.pass_context
def migrate(ctx, host, database, user, password, table, tmpdir, oformat):
    tmp_schemafile = '%s/%s-%s-schema.json' % (tmpdir, database, table)
    tmp_datafile = '%s/%s-%s-data' % (tmpdir, database, table)

    print("save schema to " + tmp_schemafile)
    ctx.invoke(BuildSchema, host=host, database=database, user=user, password=password, table=table, filename=tmp_schemafile)

    if oformat == 'csv':
        ctx.invoke(CSVExport, host=host, database=database, user=user, password=password, table=table)
    elif oformat == 'json':
        ctx.invoke(JsonExport, host=host, database=database, user=user, password=password, table=table)
    else:
        #todo error
        pass

if __name__ == '__main__':
    ## run the command
    migrate()
